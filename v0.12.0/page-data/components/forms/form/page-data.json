{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/forms/form/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"855891b1-1169-5402-8291-f9f6fc4d684e","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Form\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Form />\"), \" component wraps a collection of field components and allows for multi-field validation message rendering by accepting a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"validationMessages\"), \" property. The property takes a dictionary with key as field name and value as a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ValidationMessage\"), \" object which has a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \" and a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"message\"), \":\"), mdx(\"h2\", null, \"Form Validation\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<Form\\n  validationMessages={{\\n    alpha: { type: 'error', message: 'This is an error' },\\n    bravo: { type: 'error', message: 'This is another error' },\\n  }}\\n>\\n  <FieldText label=\\\"Alpha\\\" name=\\\"alpha\\\" />\\n  <FieldText label=\\\"Bravo\\\" name=\\\"bravo\\\" />\\n  <FieldText label=\\\"Charlie\\\" name=\\\"charlie\\\" />\\n  <Button>Submit</Button>\\n</Form>\\n\")), mdx(\"p\", null, \"A complete implementation that keeps track of state and updates validation messages onChange.\"), mdx(FormValidationDemo, {\n    mdxType: \"FormValidationDemo\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":null,"status":null,"storybook":null,"storybookPath":null,"title":"Form"}}},"pageContext":{"id":"855891b1-1169-5402-8291-f9f6fc4d684e"}},"staticQueryHashes":["1992130076","2337259409","4275213719","4275213719"]}