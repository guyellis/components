{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/overlays/menulist/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"9e95a385-1f40-543a-b3cb-6477d8e75310","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"MenuList\",\n  \"storybook\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" displays a list of choices.\"), mdx(\"h2\", null, \"Focus & Keyboard Controls\"), mdx(\"p\", null, \"When a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" is focused the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"up\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"down\"), \" arrow keys will move focus through the menu items within the list.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<MenuList>\\n  <MenuItem onClick={() => alert('Hello world!')}>Gouda</MenuItem>\\n  <MenuItem>Cheddar</MenuItem>\\n  <MenuItem>Swiss</MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Menu Item Spacing\"), mdx(\"p\", null, \"A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" accepts a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"compact\"), \" prop that will make the spacing between the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItems\"), \" smaller.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<MenuList compact>\\n  <MenuItem icon=\\\"LogoRings\\\">Looker</MenuItem>\\n  <MenuItem icon=\\\"Validate\\\">Validate</MenuItem>\\n  <MenuItem icon=\\\"ChartPie\\\">Pizza</MenuItem>\\n</MenuList>\\n\")), mdx(\"h2\", null, \"Windowing\"), mdx(\"p\", null, \"If a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" contains more than 100 children it will use windowing to display\\nonly the visible items for performance reasons. Windowing uses the item height to calculate\\npositioning for natural scrolling behavior.\"), mdx(\"p\", null, \"The windowing mode defaults to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fixed\"), \", meaning all children are assumed to have a fixed height.\\nThis is the most efficient mode, but scrolling will be distorted if the list is grouped.\\nWhen a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuList\"), \" contains over 100 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuGroup\"), \"s, manually setting \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"windowing\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"variable\"), \"\\nwill allow the height to be derived for each group and scrolling will be smooth.\"), mdx(\"h2\", null, \"MenuGroup\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuGroup\"), \" is a way to group together similar collections of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \"s.\"), mdx(\"p\", null, \"It supports an optional \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"label\"), \" prop to place a heading above the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuItem\"), \"s. When placed within a scrolling container the label will stick to the top edge while the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MenuGroup\"), \" is visible.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<MenuList>\\n  <MenuGroup>\\n    <MenuItem icon=\\\"LogoRings\\\">Looker</MenuItem>\\n    <MenuItem icon=\\\"Validate\\\">Validate</MenuItem>\\n    <MenuItem icon=\\\"ChartPie\\\">Pizza!</MenuItem>\\n  </MenuGroup>\\n  <MenuGroup label=\\\"Cheeses\\\">\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Cheddar</MenuItem>\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Mozzarella</MenuItem>\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Swiss</MenuItem>\\n  </MenuGroup>\\n  <MenuGroup label=\\\"Meats\\\">\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Sausage</MenuItem>\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Pepperoni</MenuItem>\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Salami</MenuItem>\\n  </MenuGroup>\\n  <MenuGroup label=\\\"Vegetables\\\">\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Onion</MenuItem>\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Mushroom</MenuItem>\\n    <MenuItem icon=\\\"FavoriteOutline\\\">Peppers</MenuItem>\\n  </MenuGroup>\\n</MenuList>\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":null,"status":null,"storybook":true,"storybookPath":null,"title":"MenuList"}}},"pageContext":{"id":"9e95a385-1f40-543a-b3cb-6477d8e75310"}},"staticQueryHashes":["1992130076","2337259409","4275213719","4275213719"]}