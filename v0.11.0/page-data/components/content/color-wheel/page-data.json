{"componentChunkName":"component---src-layout-documentation-tsx","path":"/components/content/color-wheel/","result":{"data":{"site":{"siteMetadata":{"title":"Looker UI Components"}},"mdx":{"id":"e90afaf9-a038-5a78-9f0a-8cdf5ab1eeb0","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"ColorWheel\",\n  \"github\": \"Form/Inputs/InputColor/ColorWheel/ColorWheel.tsx\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ColorWheel/>\"), \" renders an HSV based color wheel. The wheel can be rendered at any needed size by providing a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"size\"), \" property.\\nThe color wheel defaults to selecting a highly saturated and bright red hue.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://learn.leighcotnoir.com/artspeak/elements-color/hue-value-saturation/\"\n  }), \"This website has a nice treatment on the HSV color space,\"), \"\\nOne takeaway is that HSV color space can be thought of as a cylinder, where each slice of the cylinder is showing a circle at a particular\\nvalue between 0 and 1. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hue\"), \" can be thought of as the angle from the center of the circle can take on values between 0 and 360.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Saturation\"), \" is the distance from the center on a unit circle.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<ColorWheel size={300} />\\n\")), mdx(\"h2\", null, \"Hue, saturation, and value properties\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<ColorWheel />\"), \" component accepts \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hue\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"saturation\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \". Setting the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"value\"), \" will change the brightness of the\\nof the color wheel itself, while changing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"hue\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"saturation\"), \" will indicate what color has been selected on the color wheel.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \"<ColorWheel size={200} hue={140} saturation={0.5} value={1} />\\n\")), mdx(\"h2\", null, \"onColorChanged property\"), mdx(\"p\", null, \"Use this to provide a callback to know when a new (hue, saturation) tuple has been clicked. Note that the brightness will never change for a given\\nslice of a color wheel, and should be handled outside the color wheel component.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-jsx\"\n  }), \";() => {\\n  const [color, setColor] = useState({\\n    h: 140,\\n    s: 0.5,\\n    v: 0.5,\\n  })\\n\\n  const handleColorStateChange = (hs) => {\\n    setColor({\\n      ...hs,\\n      v: color.v,\\n    })\\n  }\\n\\n  const handleSliderChange = (event) => {\\n    const value = Number(event.currentTarget.value)\\n    setColor({ ...color, v: value / 100 })\\n  }\\n\\n  return (\\n    <Flex>\\n      <Card raised>\\n        <CardContent>\\n          <Heading as=\\\"h2\\\">Color wheel</Heading>\\n          <ColorWheel\\n            size={300}\\n            hue={color.h}\\n            saturation={color.s}\\n            value={color.v}\\n            onColorChange={handleColorStateChange}\\n          />\\n\\n          <LuminositySlider\\n            id=\\\"typeinp\\\"\\n            min={0}\\n            max={100}\\n            value={color.v * 100}\\n            onChange={handleSliderChange}\\n            step={1}\\n          />\\n        </CardContent>\\n      </Card>\\n      <Card raised>\\n        <CardContent>\\n          <Heading as=\\\"h2\\\">HSV values</Heading>\\n          <UnorderedList>\\n            <li>Hue: {color.h.toFixed(0)}</li>\\n            <li>Saturation: {color.s.toFixed(1)}</li>\\n            <li>Value: {color.v}</li>\\n          </UnorderedList>\\n        </CardContent>\\n      </Card>\\n    </Flex>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"github":"Form/Inputs/InputColor/ColorWheel/ColorWheel.tsx","status":null,"storybook":null,"storybookPath":null,"title":"ColorWheel"}}},"pageContext":{"id":"e90afaf9-a038-5a78-9f0a-8cdf5ab1eeb0"}},"staticQueryHashes":["1992130076","2337259409","4275213719","4275213719"]}